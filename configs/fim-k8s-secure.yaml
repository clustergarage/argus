apiVersion: v1
kind: Namespace
metadata:
  name: fim
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fim-admin
  namespace: fim
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fim-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: fim-admin
  namespace: fim
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: fimwatchers.fimcontroller.clustergarage.io
spec:
  group: fimcontroller.clustergarage.io
  version: v1alpha1
  scope: Namespaced
  names:
    kind: FimWatcher
    singular: fimwatcher
    plural: fimwatchers
    shortNames:
    - fw
    categories:
    - all
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Observable
    type: integer
    description: Number of pods that can be watched
    JSONPath: .status.observablePods
  - name: Watched
    type: integer
    description: Number of pods currently being watched
    JSONPath: .status.watchedPods
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fimcontroller
  namespace: fim
  labels:
    controller: fimcontroller
spec:
  replicas: 1
  selector:
    matchLabels:
      controller: fimcontroller
  template:
    metadata:
      labels:
        controller: fimcontroller
    spec:
      containers:
      - name: fimcontroller
        image: clustergarage/fim-controller:v0.2.0
        command: [
          "/fimcontroller",
          "-tls-ca-file", "/usr/lib/ssl/certs/ca.crt",
          "-tls-cert-file", "/usr/lib/ssl/certs/server.crt",
          "-tls-key-file", "/usr/lib/ssl/certs/server.key",
          "-tls-server-name", "localhost"
        ]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":5000"]
          initialDelaySeconds: 10
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":5000"]
          initialDelaySeconds: 5
        volumeMounts:
        - name: fim-config-volume
          mountPath: /usr/lib/ssl/certs
          readOnly: true
      volumes:
      - name: fim-config-volume
        configMap:
          name: fim-config
      serviceAccountName: fim-admin
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fimd
  namespace: fim
  labels:
    daemon: fimd
spec:
  selector:
    matchLabels:
      daemon: fimd
  template:
    metadata:
      labels:
        daemon: fimd
    spec:
      containers:
      - name: fimd
        image: clustergarage/fimd:v0.2.0
        command: [
          "/fimd",
          "-tlscafile", "/usr/lib/ssl/certs/ca.crt",
          "-tlscertfile", "/usr/lib/ssl/certs/server.crt",
          "-tlskeyfile", "/usr/lib/ssl/certs/server.key"
        ]
        ports:
        - name: grpc
          containerPort: 50051
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":50051"]
          initialDelaySeconds: 10
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":50051"]
          initialDelaySeconds: 5
        volumeMounts:
        - name: fim-config-volume
          mountPath: /usr/lib/ssl/certs
          readOnly: true
        - name: dockerpid
          mountPath: /var/run/docker.pid
        - name: dockersock
          mountPath: /var/run/docker.sock
        - name: sysfscgroup
          mountPath: /sys/fs/cgroup
        securityContext:
          privileged: true
      hostPID: true
      serviceAccountName: fim-admin
      volumes:
      - name: fim-config-volume
        configMap:
          name: fim-config
      - name: dockerpid
        hostPath:
          path: /var/run/docker.pid
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: sysfscgroup
        hostPath:
          path: /sys/fs/cgroup
---
apiVersion: v1
kind: Service
metadata:
  name: fimd-svc
  namespace: fim
spec:
  selector:
    daemon: fimd
  clusterIP: None
  ports:
  - name: grpc
    port: 50051
    targetPort: grpc
