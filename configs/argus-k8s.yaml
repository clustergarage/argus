apiVersion: v1
kind: Namespace
metadata:
  name: argus
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argus-admin
  namespace: argus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argus-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: argus-admin
  namespace: argus
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: arguswatchers.arguscontroller.clustergarage.io
spec:
  group: arguscontroller.clustergarage.io
  version: v1alpha1
  scope: Namespaced
  names:
    kind: ArgusWatcher
    singular: arguswatcher
    plural: arguswatchers
    shortNames:
    - aw
    categories:
    - all
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Observable
    type: integer
    description: Number of pods that can be watched
    JSONPath: .status.observablePods
  - name: Watched
    type: integer
    description: Number of pods currently being watched
    JSONPath: .status.watchedPods
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: arguscontroller
  namespace: argus
  labels:
    controller: arguscontroller
spec:
  replicas: 1
  selector:
    matchLabels:
      controller: arguscontroller
  template:
    metadata:
      labels:
        controller: arguscontroller
    spec:
      containers:
      - name: arguscontroller
        image: clustergarage/argus-controller:v0.3.0
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":5000"]
          initialDelaySeconds: 10
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":5000"]
          initialDelaySeconds: 5
      serviceAccountName: argus-admin
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: argusd
  namespace: argus
  labels:
    daemon: argusd
spec:
  selector:
    matchLabels:
      daemon: argusd
  template:
    metadata:
      labels:
        daemon: argusd
    spec:
      containers:
      - name: argusd
        image: clustergarage/argusd:v0.3.0
        ports:
        - name: grpc
          containerPort: 50051
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":50051"]
          initialDelaySeconds: 10
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":50051"]
          initialDelaySeconds: 5
        volumeMounts:
        - name: dockerpid
          mountPath: /var/run/docker.pid
        - name: dockersock
          mountPath: /var/run/docker.sock
        - name: sysfscgroup
          mountPath: /sys/fs/cgroup
        securityContext:
          privileged: true
      hostPID: true
      serviceAccountName: argus-admin
      volumes:
      - name: dockerpid
        hostPath:
          path: /var/run/docker.pid
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: sysfscgroup
        hostPath:
          path: /sys/fs/cgroup
---
apiVersion: v1
kind: Service
metadata:
  name: argusd-svc
  namespace: argus
spec:
  selector:
    daemon: argusd
  clusterIP: None
  ports:
  - name: grpc
    port: 50051
    targetPort: grpc
