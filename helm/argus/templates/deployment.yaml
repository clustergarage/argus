apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.controller.name}}
  namespace: {{.Values.namespace}}
  labels:
    controller: {{.Values.controller.name}}
spec:
  replicas: {{.Values.controller.replicas}}
  selector:
    matchLabels:
      controller: {{.Values.controller.name}}
  template:
    metadata:
      labels:
        controller: {{.Values.controller.name}}
    spec:
      containers:
      - name: {{.Values.controller.name}}
        image: {{.Values.controller.image | quote}}
        ports:
        - name: {{.Values.controller.prometheus.name}}
          containerPort: {{.Values.controller.prometheus.port}}
        {{- if .Values.tls}}
        command: [
          "/arguscontroller",
          "-tls-ca-file", "/usr/lib/ssl/certs/ca.crt",
          "-tls-cert-file", "/usr/lib/ssl/certs/server.crt",
          "-tls-key-file", "/usr/lib/ssl/certs/server.key",
          "-tls-server-name", "localhost"
        ]
        {{- end}}
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":{{.Values.controller.probePort}}"]
          initialDelaySeconds: 10
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr", ":{{.Values.controller.probePort}}"]
          initialDelaySeconds: 5
        {{- if .Values.tls}}
        volumeMounts:
        - name: argus-config-volume
          mountPath: /usr/lib/ssl/certs
          readOnly: true
        {{- end}}
      serviceAccountName: {{.Values.serviceAccount}}
      {{- if .Values.tls}}
      volumes:
      - name: argus-config-volume
        configMap:
          name: argus-config
      {{- end}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{.Values.controller.prometheus.name}}
  namespace: {{.Values.namespace}}
  labels:
    controller: {{.Values.controller.name}}
spec:
  selector:
    controller: {{.Values.controller.name}}
  ports:
  - name: {{.Values.controller.prometheus.portName}}
    port: {{.Values.controller.prometheus.port}}
    targetPort: {{.Values.controller.prometheus.portName}}
